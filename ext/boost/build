#!/usr/bin/env bash

set -euo pipefail

script_dir="$(dirname "$(readlink -e "${BASH_SOURCE[0]}")")"
common_sh_path="$(readlink -e "$script_dir/../../bin/common.sh")"
. "$common_sh_path"
unset common_sh_path

PROGRAM_NAME=ext/boost/build

function print_usage ()
{
  cat <<'EOF'
Usage: build [OPTION]... -- [b2arg]...
Build Boost.

  --source-dir=<DIR>         The source directory (mandatory).
  --prefix=<PREFIX>          The prefix of installation locations (mandatory).
  -h, --help                 Display this help and exit.
EOF
}

if getopt -T; (( $? != 4 )); then
  die_with_runtime_error "$PROGRAM_NAME" "\`getopt' is not an enhanced version."
fi
opts="$(getopt -n "$PROGRAM_NAME" -l source-dir:,prefix:,help -- h "$@")"
eval set -- "$opts"

while (( $# > 0 )); do
  arg="$1"
  shift
  case "$arg" in
  --source-dir)
    if (( $# == 0 )); then
      die_with_logic_error "$PROGRAM_NAME"
    fi
    source_dir="$1"
    shift
    ;;
  --prefix)
    if (( $# == 0 )); then
      die_with_logic_error "$PROGRAM_NAME"
    fi
    prefix="$1"
    shift
    ;;
  -h|--help)
    set +x
    print_usage
    exit 0
    ;;
  --)
    rest_args=("$@")
    break
    ;;
  *)
    die_with_user_error "$PROGRAM_NAME" "An invalid argument \`$arg'."
    ;;
  esac
done

b2_args=()

b2_args+=("-j$(nproc)")

if [[ $SHELLOPTS =~ (^|:)xtrace($|:) ]]; then
  b2_args+=('-d+2')
fi

temp_dir="$(mktemp -d)" \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to create a temporary directory."
push_rollback_command "rm -rf \"$temp_dir\""

if [[ ! -v source_dir ]]; then
  die_with_user_error "$PROGRAM_NAME" "\`--source-dir' option is mandatory."
fi
if [[ $(readlink -m "$source_dir") != $(cd "$temp_dir" >/dev/null && readlink -m "$source_dir") ]]; then
  die_with_user_error "$PROGRAM_NAME" "A relative path \`$source_dir' is specified for \`--source-dir' option, but is expected to be an absolute one."
fi

if [[ ! -v prefix ]]; then
  die_with_user_error "$PROGRAM_NAME" "\`--prefix' option is mandatory."
fi
if [[ $(readlink -m "$prefix") != $(cd "$temp_dir" >/dev/null && readlink -m "$prefix") ]]; then
  die_with_user_error "$PROGRAM_NAME" "A relative path \`$prefix' is specified for \`--prefix' option, but is expected to be an absolute one."
fi
b2_args+=("--prefix=$prefix")

b2_args+=(${rest_args[@]+"${rest_args[@]}"})

b2_args+=(install)

mkdir -p "$prefix/bin" \
  || die_with_logic_error "$PROGRAM_NAME" "Failed to create the directory \`$prefix/bin'."
touch "$temp_dir/timestamp" \
  || die_with_logic_error "$PROGRAM_NAME" "Failed to \`touch' \`$temp_dir/timestamp'."
(cd "$source_dir" && ./bootstrap.sh) \
  || die_with_logic_error "$PROGRAM_NAME" "Failed to execute \`bootstrap.sh'."
(cd "$source_dir" && mv b2 "$prefix/bin") \
  || die_with_logic_error "$PROGRAM_NAME" "Failed to \`mv' \`bjam' or \`b2'."
find "$source_dir" -newer "$temp_dir/timestamp" -type f -delete \
  || die_with_logic_error "$PROGRAM_NAME" "Failed to delete intermediate files."
find "$source_dir" -newer "$temp_dir/timestamp" -type d -empty -delete \
  || die_with_logic_error "$PROGRAM_NAME" "Failed to delete intermediate files."

(cd "$source_dir" && "$prefix/bin/b2" ${b2_args[@]+"${b2_args[@]}"}) \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to build Boost libraries."
