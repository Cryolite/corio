#!/usr/bin/env bash

set -euo pipefail

script_dir="$(dirname "$(readlink -e "${BASH_SOURCE[0]}")")"
common_sh_path="$(readlink -e "$script_dir/../../bin/common.sh")"
. "$common_sh_path"
unset common_sh_path

PROGRAM_NAME=ext/libbacktrace/download

function print_usage ()
{
  cat <<'EOF'
Usage: ext/libbacktrace/download [OPTION]...
Download libbacktrace source tree.

  --source-dir=<DIR>         Source directory (mandatory).
  -h, --help                 Display this help and exit.
EOF
}

if getopt -T; (( $? != 4 )); then
  die_with_runtime_error "$PROGRAM_NAME" "\`getopt' is not an enhanced version."
fi
opts="$(getopt -n "$PROGRAM_NAME" -l source-dir:,help -- h "$@")"
eval set -- "$opts"

while (( $# > 0 )); do
  arg="$1"
  shift
  case "$arg" in
  --source-dir)
    if (( $# == 0 )); then
      die_with_logic_error "$PROGRAM_NAME"
    fi
    source_dir="$1"
    shift
    ;;
  -h|--help)
    set +x
    print_usage
    exit 0
    ;;
  --)
    if (( $# > 0 )); then
      die_with_user_error "$PROGRAM_NAME" "An invalid argument \`$1'."
    fi
    break
    ;;
  *)
    die_with_user_error "$PROGRAM_NAME" "An invalid argument \`$arg'."
    ;;
  esac
done

temp_dir="$(mktemp -d)" \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to create a temporary directory."
push_rollback_command "rm -rf \"$temp_dir\""

if [[ ! -v source_dir ]]; then
  die_with_user_error "$PROGRAM_NAME" "\`--source-dir' option is mandatory."
fi
if [[ $(readlink -m "$source_dir") != $(cd "$temp_dir" >/dev/null && readlink -m "$source_dir") ]]; then
  die_with_user_error "$PROGRAM_NAME" "A relative path \`$source_dir' is specified for \`--source-dir' option, but is expected to be an absolute one."
fi

if [[ -e $source_dir ]]; then
  rm -rf "$source_dir"
fi

source_dir_prefix="$(dirname "$source_dir")"
source_dir_basename="$(basename "$source_dir")"

mkdir -p "$source_dir_prefix" \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to create \`$source_dir_prefix' directory, which is necessary to create the source directory \`$source_dir'."

(cd "$source_dir_prefix" && git clone 'https://github.com/ianlancetaylor/libbacktrace.git' "$source_dir_basename") \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to \`git clone' libbacktrace repository."
