#!/usr/bin/env bash

set -euo pipefail

script_dir="$(dirname "${BASH_SOURCE[0]}")"
common_sh_path="$(readlink -e "$script_dir/../../bin/common.sh")"
. "$common_sh_path"
unset common_sh_path

PROGRAM_NAME=ext/icu4c/install

function print_usage ()
{
  cat <<'EOF'
Usage: ext/icu4c/install [OPTION]...
Install ICU4C.

  --build-dir=<DIR>          The build directory (mandatory).
  -h, --help                 Display this help and exit.
EOF
}

if getopt -T; (( $? != 4 )); then
  die_with_runtime_error "$PROGRAM_NAME" "\`getopt' is not an enhanced version."
fi
opts="$(getopt -n "$PROGRAM_NAME" -l build-dir:,help -- h "$@")"
eval set -- "$opts"

while (( $# > 0 )); do
  arg="$1"
  shift
  case "$arg" in
  --build-dir)
    if (( $# == 0 )); then
      die_with_logic_error "$PROGRAM_NAME"
    fi
    build_dir="$1"
    shift
    ;;
  -h|--help)
    set +x
    print_usage
    exit 0
    ;;
  --)
    if (( $# > 0 )); then
      die_with_user_error "$PROGRAM_NAME" "An invalid argument \`$1'."
    fi
    break
    ;;
  *)
    die_with_user_error "$PROGRAM_NAME" "An invalid argument \`$arg'."
    ;;
  esac
done

if [[ ! -v build_dir ]]; then
  die_with_user_error "$PROGRAM_NAME" "\`--build-dir' option is mandatory."
fi

(cd "$build_dir" && make install) \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to \`make install' ICU4C."
